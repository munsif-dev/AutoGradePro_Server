version: "3.8"

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=autogradepro
    networks:
      - autogradepro_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Ollama AI Service
  ollama:
    image: ollama/ollama:latest
    volumes:
      - ollama_data:/root/.ollama
      - ./ollama-cache:/root/.ollama/models
    shm_size: 2gb
    deploy:
      resources:
        limits:
          memory: 8G  # Give Ollama more memory
    networks:
      - autogradepro_network
    restart: unless-stopped
    entrypoint: ["/bin/sh", "-c"]
    command: >
      "
      ollama serve & 
      sleep 10 && 
      ollama pull qwen2.5:1.5b &&
      ollama list &&
      tail -f /dev/null
      "
    healthcheck:
      test: ["CMD-SHELL", "curl -s --fail http://localhost:11434/api/version || exit 0"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 40s
    
    

  # Django Web Application
  web:
    build:
      context: .
    container_name: autogradepro-backend
    volumes:
      - .:/app
      - static_volume:/app/static
      - media_volume:/app/media
      - submissions_volume:/app/submissions
      
    networks:
      - autogradepro_network
    ports:
      - "8000:8000"  # IMPORTANT: Expose the Django port
    environment:
      - DJANGO_SETTINGS_MODULE=Server.settings
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=autogradepro
      - POSTGRES_HOST=db
      - OLLAMA_HOST=http://ollama:11434
      - SECRET_KEY=${SECRET_KEY:-default_secret_key_change_in_production}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-*}
      - DEBUG=False
    depends_on:
      db:
        condition: service_healthy
      ollama:
        condition: service_started
    command: >
      bash -c "
      sleep 15 &&
      python manage.py migrate &&
      python manage.py collectstatic --noinput &&
      gunicorn Server.wsgi:application --bind 0.0.0.0:8000 --workers 3 --worker-class gthread --threads 4 --timeout 300 --graceful-timeout 300 --worker-tmp-dir /dev/shm --keep-alive 65 --log-level debug
      "

    

networks:
  autogradepro_network:
    external: true

volumes:
  postgres_data:
  static_volume:
  media_volume:
  submissions_volume:
  ollama_data: